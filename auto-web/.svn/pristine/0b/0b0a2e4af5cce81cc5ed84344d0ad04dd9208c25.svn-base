package com.ccigmall.auto.test.step.pc.supplier.seller.order;

import org.openqa.selenium.By;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.testng.Assert;
import org.testng.TestNGException;
import org.testng.annotations.Test;

import com.ccigmall.auto.test.act.pc.dealer.systemManage.order.ContractAct;
import com.ccigmall.auto.test.act.pc.supplier.seller.order.ShippingAct;
import com.ccigmall.auto.test.constant.Constant;
import com.ccigmall.auto.test.step.pc.supplier.SupplierStep;
/**
 * 
 * @author chenjingli
 * 供应商发货
 */
public class SupplierShippingStep  extends SupplierStep{
	/**
	 * slf4j
	 */
	private final static Logger logger = LoggerFactory
			.getLogger(SupplierShippingStep.class);
	protected ShippingAct shippingAct;
	/**
	 * test test pc supplier 供应商发货
	 * @throws Exception 
	 */
	@Test(description = "test pc supplier 供应商发货")
	public void testSupplierShipping() {    		    	
		    try{
		    	logger.info("test pc supplier 供应商发货测试用例执行开始，测试用例名称是：{}",getClass().getName());
		    	/**
		    	 * 初始化所需对象
		    	 */
		    	shippingAct = new ShippingAct(driver);
		    	//点击卖家中心
		    	shippingAct.getSoldGoodsAct().clickSellerCenter();
		    	//点击已卖出的货品
		    	shippingAct.getSoldGoodsAct().clickSoldGoods();
		    	//输入要下单填写合同的商品采购id
		    	shippingAct.inputOrderId(purchaseId);
		    	//点击搜索按钮
		    	shippingAct.clickSearchButton();
		    	logger.info("判断搜索到的商品是否是你想要的");
		    	if(productName.equals(shippingAct.getText(shippingAct.getSoldGoodsPage().getXpathGetProductName()))){
		    		//点击确认合同按钮
		    		shippingAct.getSoldGoodsAct().clickShipingButton();
				}else{
					Assert.fail("点击搜索没有搜索到指定内容");
				}
		    	//切换窗口
		    	shippingAct.switchToWindow(driver.getWindowHandle());
		    	//输入批次号
		    	shippingAct.typeBatchNum("1");
		    	//输入批次数量
		    	shippingAct.typeNumber();
		    	if(shippingAct.getShippingPage().getGetInputNumber().size()==7){
		    		//点击确认合同按钮
			    	shippingAct.clickSubmitBuitton();
			    	//点击弹出框中的确定
			    	shippingAct.clickConfirmButton();
		    	}else{
		    		/*生产日期 */
		    		shippingAct.typeCreateTime("2014-1-1");
		    		shippingAct.pause(1);
		    		/*有效日期 */
		    		shippingAct.typeEndTime("2014-12-12");
		    		//点击确认合同按钮
			    	shippingAct.clickSubmitBuitton();
			    	if(driver.findElement(By.xpath("//div[@class='ui_inner']/descendant::span")).getText().contains("服务器忙！请稍后重试！")){
			    		logger.error("test pc supplier 供应商发货 输入发货信息后提交报错，报错内容是：{} 导致用例执行失败",
			    				driver.findElement(By.xpath("//div[@class='ui_inner']/descendant::span")).getText());
			    		Assert.fail("test pc supplier 供应商发货 输入发货信息后提交报错,用例执行失败");
			    				
			    	}
			    	//点击弹出框中的确定
			    	shippingAct.clickConfirmButton();
		    	}
		    	//返回首页判断一下是否下单成功
		    	shippingAct.inputOrderId(purchaseId);
		    	//点击搜索按钮
		    	shippingAct.clickSearchButton();
		    	//=2秒
		    	shippingAct.pause(2);
		    	Assert.assertEquals("已发货".trim(),shippingAct.getText(shippingAct.getSoldGoodsPage().getXpathGetGoodsStatu()));
		    	logger.info("test pc supplier 供应商发货测试用例执行结束！");
		    }catch (AssertionError e) {
				logger.error("Constant.TEST_DEALER_SEND_GOODS_ORDER_FAIL ", e);
				Assert.fail(Constant.TEST_DEALER_SEND_GOODS_ORDER_FAIL + " >> "
						+ e.getMessage());
			} catch (Exception e) {
				logger.error(Constant.TEST_DEALER_SEND_GOODS_ORDER_FAIL, e);
				throw new TestNGException("Constant.TEST_DEALER_SEND_GOODS_ORDER_FAIL >> "
						+ e.getMessage(), e);
			}
		    
	}
}
